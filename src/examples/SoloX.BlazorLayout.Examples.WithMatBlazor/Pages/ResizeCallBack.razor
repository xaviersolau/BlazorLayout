@page "/ResizeCallBack"


@inject IResizeObserverService sizeObserverService

@implements IResizeCallBack
@implements IAsyncDisposable

<BoxContainer @ref="ContainerReference" Fill="Fill.Full">
    <MatCard Class="height-100 width-100" >
        <div class="card-content">
            <MatHeadline6 Style="margin:0px;">
                Let's register a resize callback!
            </MatHeadline6>
            <MatBody1 Style="margin:0px;">
                Its size is @width x @height
            </MatBody1>
        </div>

    </MatCard>

</BoxContainer>


@code
{
    private BoxContainer ContainerReference { get; set; }

    private int width;
    private int height;

    private IAsyncDisposable callBackDisposable;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            callBackDisposable = await sizeObserverService.RegisterResizeCallBackAsync(this, ContainerReference.ElementReference);
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    public ValueTask ResizeAsync(int width, int height)
    {
        this.height = height;
        this.width = width;

        this.StateHasChanged();

        return ValueTask.CompletedTask;
    }

    public async ValueTask DisposeAsync()
    {
        if (this.callBackDisposable != null)
        {
            await callBackDisposable.DisposeAsync();
            this.callBackDisposable = null;
        }
    }
}